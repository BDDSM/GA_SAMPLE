#Область Встраивание_GA_в_модуль_формы_ПЕРЕМЕННЫЕ

&НаКлиенте
Перем м_GA Экспорт; // Только для основной формы

&НаКлиенте
Перем м_ОФ; // Требуется в каждой форме

#КонецОбласти

#Область Встраивание_GA_в_модуль_формы_МЕТОДЫ

// Функция - Подключение формы модGA к экспотной переменной м_GA (ТОЛЬКО ДЛЯ ОСНОВНОЙ ФОРМЫ)
// 
// Возвращаемое значение:
//  Булево - признак успешного выполнения
//
&НаКлиенте
Функция МодульGA_Подключить()
	Перем бВыполненоБезОшибок, сТекстОшибки, сПутьДоФорм;
	Перем МОДУЛЬ_GA;
	
	// КОНСТАНТЫ
	МОДУЛЬ_GA = "модGA";
	
	бВыполненоБезОшибок = Ложь;
	
	Если Форма_Имя(ЭтотОбъект) <> ОсновнаяФорма_Имя() Тогда
		Возврат бВыполненоБезОшибок;
	КонецЕсли;
	
	сПутьДоФорм = Лев(ЭтотОбъект.ИмяФормы, СтрНайти(ЭтотОбъект.ИмяФормы, ".", НаправлениеПоиска.СКонца));
	
	Попытка
		ЭтотОбъект.м_GA = ПолучитьФорму(сПутьДоФорм + МОДУЛЬ_GA,,ЭтотОбъект);
	Исключение
		сТекстОшибки = "Ошибка получения формы ""модGA""
		|  Функция: МодульGA_Подключить
		|  Описание ошибки: %1";
		сТекстОшибки = СтрШаблон(сТекстОшибки, ОписаниеОшибки());
		SaveToJournal(,сТекстОшибки,3);
		Возврат бВыполненоБезОшибок;
	КонецПопытки;
	
	Если ТипЗнч(м_GA) <> Тип("УправляемаяФорма") Тогда
		сТекстОшибки = "Ошибка получения формы ""модGA""
		|  Функция: МодульGA_Подключить
		|  Описание ошибки: Форма не создана. Получен отказ.";
		SaveToJournal(,сТекстОшибки,3);
		Возврат бВыполненоБезОшибок;
	КонецЕсли;
	
	бВыполненоБезОшибок = Истина;
	Возврат бВыполненоБезОшибок;
КонецФункции

// Функция - Получить ссылку на Основную форму обработки
//
// Параметры:
//  оФорма	 - УправляемаяФорма	 - текущая форма обработки, например "ЭтотОбъект"
// 
// Возвращаемое значение:
//  УправляемаяФорма - ссылка на основную форму обработки
//
&НаКлиенте
Функция ОсновнаяФорма_Получить(оФорма)
	Перем сТекущаяФорма_Имя, сОсновнаяФорма_Имя, сТекстОшибки;
	
	Если ТипЗнч(оФорма) <> Тип("УправляемаяФорма") ИЛИ оФорма = Неопределено Тогда
		сТекстОшибки = "Ошибка получения основной формы обработки
		|  Функция: ОсновнаяФорма_Получить
		|  Описание ошибки: Параметр функции должен быть типа ""УправляемаяФорма""";
		SaveToJournal(,сТекстОшибки,3);
		Возврат Неопределено;
	КонецЕсли;
	
	сТекущаяФорма_Имя = Форма_Имя(оФорма);
	сОсновнаяФорма_Имя = ОсновнаяФорма_Имя();
	
	Если сТекущаяФорма_Имя = сОсновнаяФорма_Имя Тогда
		Возврат оФорма;
	Иначе
		Возврат ОсновнаяФорма_Получить(оФорма.ВладелецФормы);
	КонецЕсли;
	
КонецФункции

// Функция - Имя основной формы обработки
// 
// Возвращаемое значение:
//  Строка - имя формы
//
&НаСервере
Функция ОсновнаяФорма_Имя()
	Перем ОО, оОсновнаяФорма, сФормаНаименование;
	
	ОО = РеквизитФормыВЗначение("Объект");
	оОсновнаяФорма = ОО.Метаданные().ОсновнаяФорма;
	
	Если оОсновнаяФорма = Неопределено Тогда
		сФормаНаименование = "";
	Иначе
		сФормаНаименование = оОсновнаяФорма.Имя;
	КонецЕсли;
	
	Возврат сФормаНаименование;
КонецФункции

// Функция - Имя формы обработки
//
// Параметры:
//  оФорма	 - УправляемаяФорма	 - объект управляемой формы, имя которого нужно получить
// 
// Возвращаемое значение:
//  Строка - имя формы
//
&НаКлиенте
Функция Форма_Имя(оФорма)
	
	Если ТипЗнч(оФорма) <> Тип("УправляемаяФорма") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Сред(оФорма.ИмяФормы, СтрНайти(оФорма.ИмяФормы, ".", НаправлениеПоиска.СКонца)+1);
КонецФункции

// Процедура - Записать в Журнал регистрации (Сервер)
//
// Параметры:
//  сСобытие		 - Строка - Наименование события
//  сСообщение		 - Строка - Текст сообщения
//  чТипСообщения	 - Число - Тип сообщения:
//		* 1 - Информация
//		* 2 - Предупреждение
//		* 3 - Ошибка
//		* 4 - Примечание
//
&НаСервереБезКонтекста
Процедура SaveToJournal(Val сСобытие = "", Val сСообщение = "", Val чТипСообщения = 1)
	VAR sEvent, oMsgType;
	
	Если ПустаяСтрока(сСобытие) Тогда
		сСобытие = "Модуль отправки статистики в GoogleAnalytics | ФормаГлавная";
	КонецЕсли;

	IF (TypeOf(сСообщение) = Type("String")) AND (NOT IsBlankString(сСообщение)) THEN
		sEvent = ?(IsBlankString(сСобытие), "Х.З.", сСобытие);
		
		IF чТипСообщения = 1 THEN
			oMsgType = УровеньЖурналаРегистрации.Информация;
		ELSIF чТипСообщения = 2 THEN
			oMsgType = УровеньЖурналаРегистрации.Предупреждение;
		ELSIF чТипСообщения = 3 THEN
			oMsgType = УровеньЖурналаРегистрации.Ошибка;
		ELSIF чТипСообщения = 4 THEN
			oMsgType = УровеньЖурналаРегистрации.Примечание;
		ELSE
			oMsgType = УровеньЖурналаРегистрации.Предупреждение;
		ENDIF;
		
		ЗаписьЖурналаРегистрации(sEvent, oMsgType,,, сСообщение);
	ENDIF;
	
КонецПроцедуры

#КонецОбласти

#Область Конструктор_деструктор

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Перем сИдКлиента, мДанные;
	Перем ИДПРИЛОЖЕНИЯ;
	
	// КОНСТАНТА
	ИДПРИЛОЖЕНИЯ = "UA-111561301-1"; // Идентификатор отслеживания полученный в GoogleAnalytics
	
	Если ТипЗнч(р_бОтправкаРазрешена) <> Тип("Булево") Тогда
		р_бОтправкаРазрешена = Ложь;
	КонецЕсли;
	р_бРежимОтладки = Ложь;
	УстановитьЦветЭлементов();
	
	// ПОДКЛЮЧЕНИЕ БИБЛИОТЕКИ модGA
	Если НЕ МодульGA_Подключить() Тогда
		СообщитьПользователю("Модуль GA не подключен. Подробнее, см. ЖР.");
	КонецЕсли;
	
	м_ОФ = ОсновнаяФорма_Получить(ЭтотОбъект);
	Если м_ОФ = Неопределено Тогда
		СообщитьПользователю("ОсновнаяФорма не определена. Модуль GA не подключен. Подробнее, см. ЖР.");
	КонецЕсли;
	
	// ИНИЦИАЛИЗАЦИЯ БИБЛИОТЕКИ И УСТАНОВКА ПАРАМЕТРОВ GA
	м_ОФ.м_GA.УстановитьИдентификаторПриложения(ИДПРИЛОЖЕНИЯ);
	сИдКлиента = ПолучитьИдентификаторКлиента();
	м_ОФ.м_GA.УстановитьИдентификаторКлиента(сИдКлиента);
	м_ОФ.м_GA.УстановитьРазрешениеОтправкиСтатистики(р_бОтправкаРазрешена);
	м_ОФ.м_GA.УстановитьРежимОтладки(р_бРежимОтладки);
	
	Если НЕ м_ОФ.м_GA.НачатьРаботуС_GA() Тогда
		СообщитьПользователю("Не удалось начать работу с GA. Подробнее, см. ЖР.");
	КонецЕсли;
	
	// ОТПРАВКА В GA | Начало сеанса
	мДанные = м_ОФ.м_GA.GA_Сеанс(м_ОФ.м_GA.SC.start);
	м_ОФ.м_GA.GA_ОтправитьСведения(мДанные);
	мДанные = м_ОФ.м_GA.GA_Форма_Экран(м_ОФ.м_GA.Форма_Имя(ЭтотОбъект));
	м_ОФ.м_GA.GA_ОтправитьСведения(мДанные);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Перем мДанные;
	
	// ОТПРАВКА В GA | Конец сеанса
	мДанные = м_ОФ.м_GA.GA_Сеанс(м_ОФ.м_GA.SC.end);
	м_ОФ.м_GA.GA_ОтправитьСведения(мДанные);
	
	м_ОФ.м_GA.ЗакончитьРаботуС_GA();
	
КонецПроцедуры

#КонецОбласти

#Область События_формы

// Процедура - Открыть дочернюю форму "Настройки"
//
// Параметры:
//  Команда	 - КомандаФормы	 - 
//
&НаКлиенте
Процедура ОткрытьФормуНастройки(Команда)
	Перем сФорма, ОписаниеОповещения, мДанные;
	
	мДанные = м_ОФ.м_GA.GA_Событие(м_ОФ.м_GA.EC.UX,м_ОФ.м_GA.EA.UX_clic,Команда.Имя);
	м_ОФ.м_GA.GA_ОтправитьСведения(мДанные);
	
	сФорма = "ВнешняяОбработка.GA_Sample_UF.Форма.ФормаНастройки";
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗакрытии_Настройка",ЭтотОбъект);	
	ОткрытьФорму(сФорма,,ЭтотОбъект,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Процедура - Открыть дочернюю форму "О программе"
//
// Параметры:
//  Команда	 - КомандаФормы	 - 
//
&НаКлиенте
Процедура ОткрытьФормуОПрограмме(Команда)
	Перем сФорма, ОписаниеОповещения, мДанные;
	
	мДанные = м_ОФ.м_GA.GA_Событие(м_ОФ.м_GA.EC.UX,м_ОФ.м_GA.EA.UX_clic,Команда.Имя);
	м_ОФ.м_GA.GA_ОтправитьСведения(мДанные);
	
	сФорма = "ВнешняяОбработка.GA_Sample_UF.Форма.ФормаОПрограмме";
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗакрытии_ОПрограмме",ЭтотОбъект);	
	ОткрытьФорму(сФорма,,ЭтотОбъект,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

// Процедура - B2B команда "Отправить документ"
//
// Параметры:
//  Команда	 - КомандаФормы - 
//
&НаКлиенте
Процедура B2B_ОтправитьДокумент(Команда)
	Перем мДанные, сИмяДокумента, чКоличествоДокументов, сТекст;
	
	сИмяДокумента = "СЧФ";
	чКоличествоДокументов = 4;
	
	мДанные = м_ОФ.м_GA.GA_Событие(м_ОФ.м_GA.EC.UX,м_ОФ.м_GA.EA.UX_clic,Команда.Имя);
	м_ОФ.м_GA.GA_ОтправитьСведения(мДанные);
	мДанные = м_ОФ.м_GA.GA_Событие(м_ОФ.м_GA.EC.B2B,м_ОФ.м_GA.EA.B2B_send,сИмяДокумента,чКоличествоДокументов);
	м_ОФ.м_GA.GA_ОтправитьСведения(мДанные);
	
	сТекст = "Отправлен документ %1 в количестве %2 штук";
	сТекст = СтрШаблон(сТекст, сИмяДокумента, Строка(чКоличествоДокументов));
	СообщитьПользователю(сТекст);
КонецПроцедуры

// Процедура - B2B команда "Получить документ"
//
// Параметры:
//  Команда	 - КомандаФормы	 - 
//
&НаКлиенте
Процедура B2B_ПолучитьДокумент(Команда)
	Перем мДанные, сИмяДокумента, чКоличествоДокументов, сТекст;

	сИмяДокумента = "АКТ";
	чКоличествоДокументов = 1;
	
	мДанные = м_ОФ.м_GA.GA_Событие(м_ОФ.м_GA.EC.UX,м_ОФ.м_GA.EA.UX_clic,Команда.Имя);
	м_ОФ.м_GA.GA_ОтправитьСведения(мДанные);
	мДанные = м_ОФ.м_GA.GA_Событие(м_ОФ.м_GA.EC.B2B,м_ОФ.м_GA.EA.B2B_receive,сИмяДокумента,чКоличествоДокументов);
	м_ОФ.м_GA.GA_ОтправитьСведения(мДанные);
	
	сТекст = "Получен документ %1 в количестве %2 штук";
	сТекст = СтрШаблон(сТекст, сИмяДокумента, Строка(чКоличествоДокументов));
	СообщитьПользователю(сТекст);
КонецПроцедуры

// Процедура - Команда с ошибкой
//
// Параметры:
//  Команда	 - КомандаФормы	 - 
//
&НаКлиенте
Процедура ОткрытьНесуществующуюФорму(Команда)
	Перем сФорма, мДанные, сТекст;
	
	мДанные = м_ОФ.м_GA.GA_Событие(м_ОФ.м_GA.EC.UX,м_ОФ.м_GA.EA.UX_clic,Команда.Имя);
	м_ОФ.м_GA.GA_ОтправитьСведения(мДанные);
	
	сФорма = "ВнешняяОбработка.GA_Sample_UF.Форма.НесуществующаяФорма";
	Попытка
		ОткрытьФорму(сФорма,,ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Исключение
		мДанные = м_ОФ.м_GA.GA_Ошибка(м_ОФ.м_GA.EXD.US_invalidaction, Истина);
	    м_ОФ.м_GA.GA_ОтправитьСведения(мДанные);
		
		сТекст = ОписаниеОшибки();
		СообщитьПользователю(сТекст);
	КонецПопытки;

КонецПроцедуры

// Процедура - Обратный вызов при закрытии формы "Настройка"
//
// Параметры:
//  РезультатЗакрытия		 - 	 - 
//  ДополнительныеПараметры	 - 	 - 
//
&НаКлиенте
Процедура ПриЗакрытии_Настройка(РезультатЗакрытия, ДополнительныеПараметры)Экспорт
	Перем мДанные;
	
	мДанные = м_ОФ.м_GA.GA_Форма_Экран(м_ОФ.м_GA.Форма_Имя(ЭтотОбъект));
	м_ОФ.м_GA.GA_ОтправитьСведения(мДанные);
	
КонецПроцедуры

// Процедура - Обратный вызов при закрытии формы "О программе"
//
// Параметры:
//  РезультатЗакрытия		 - 	 - 
//  ДополнительныеПараметры	 - 	 - 
//
&НаКлиенте
Процедура ПриЗакрытии_ОПрограмме(РезультатЗакрытия, ДополнительныеПараметры)Экспорт
	Перем мДанные;
	
	мДанные = м_ОФ.м_GA.GA_Форма_Экран(м_ОФ.м_GA.Форма_Имя(ЭтотОбъект));
	м_ОФ.м_GA.GA_ОтправитьСведения(мДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Перем сСобытие;
	
	Если ИмяСобытия = "ОтправкаРазрешенаИзменение" Тогда
		ЭтотОбъект.р_бОтправкаРазрешена = Параметр;
		м_ОФ.м_GA.УстановитьРазрешениеОтправкиСтатистики(р_бОтправкаРазрешена);
	КонецЕсли;

	Если ИмяСобытия = "РежимОтладкиИзменение" Тогда
		ЭтотОбъект.р_бРежимОтладки = Параметр;
		м_ОФ.м_GA.УстановитьРежимОтладки(р_бРежимОтладки);
	КонецЕсли;

	УстановитьЦветЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область Прочие_методы

// Процедура - Сообщить пользователю
//
// Параметры:
//  сСообщение	 - Строка - текст сообщения
//
&НаКлиенте
Процедура СообщитьПользователю(сСообщение)
	Перем Сообщение;
	
	Если ТипЗнч(сСообщение) = Тип("Строка") И НЕ ПустаяСтрока(сСообщение) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = сСообщение;
		Сообщение.Сообщить(); 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИдентификаторКлиента()
	Возврат ПолучитьИдентификаторКлиента_Сервер();
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьИдентификаторКлиента_Сервер()
	Перем рефОрганизация, ИдКлиента;
	
	рефОрганизация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");	
	
	Если ТипЗнч(рефОрганизация) = Тип("СправочникСсылка.Организации") И НЕ рефОрганизация.Пустая() Тогда
		ИдКлиента = рефОрганизация.УникальныйИдентификатор();
	Иначе
		ИдКлиента = ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор;
	КонецЕсли;
	
	Возврат ИдКлиента;
КонецФункции

&НаКлиенте
Процедура УстановитьЦветЭлементов()
	Перем Элемент;
	
	Элемент = ЭтотОбъект.Элементы.р_бОтправкаРазрешена;
	Если ЭтотОбъект.р_бОтправкаРазрешена Тогда
		Элемент.ЦветТекста = WebЦвета.ТемноЗеленый;
	Иначе
		Элемент.ЦветТекста = WebЦвета.Кирпичный;
	КонецЕсли;
	
	Элемент = ЭтотОбъект.Элементы.р_бРежимОтладки;	
	Если ЭтотОбъект.р_бРежимОтладки Тогда
		Элемент.ЦветТекста = WebЦвета.ТемноЗеленый;
	Иначе
		Элемент.ЦветТекста = WebЦвета.Кирпичный;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти