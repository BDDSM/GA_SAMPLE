#Область Встраивание_GA_в_модуль_формы_ПЕРЕМЕННЫЕ

&НаКлиенте
Перем м_ОФ; // Требуется в каждой форме

#КонецОбласти

#Область Встраивание_GA_в_модуль_формы_МЕТОДЫ

// Функция - Получить ссылку на Основную форму обработки
//
// Параметры:
//  оФорма	 - УправляемаяФорма	 - текущая форма обработки, например "ЭтотОбъект"
// 
// Возвращаемое значение:
//  УправляемаяФорма - ссылка на основную форму обработки
//
&НаКлиенте
Функция ОсновнаяФорма_Получить(оФорма)
	Перем сТекущаяФорма_Имя, сОсновнаяФорма_Имя, сТекстОшибки;
	
	Если ТипЗнч(оФорма) <> Тип("УправляемаяФорма") ИЛИ оФорма = Неопределено Тогда
		сТекстОшибки = "Ошибка получения основной формы обработки
		|  Функция: ОсновнаяФорма_Получить
		|  Описание ошибки: Параметр функции должен быть типа ""УправляемаяФорма""";
		SaveToJournal(,сТекстОшибки,3);
		Возврат Неопределено;
	КонецЕсли;
	
	сТекущаяФорма_Имя = Форма_Имя(оФорма);
	сОсновнаяФорма_Имя = ОсновнаяФорма_Имя();
	
	Если сТекущаяФорма_Имя = сОсновнаяФорма_Имя Тогда
		Возврат оФорма;
	Иначе
		Возврат ОсновнаяФорма_Получить(оФорма.ВладелецФормы);
	КонецЕсли;
	
КонецФункции

// Функция - Имя основной формы обработки
// 
// Возвращаемое значение:
//  Строка - имя формы
//
&НаСервере
Функция ОсновнаяФорма_Имя()
	Перем ОО, оОсновнаяФорма, сФормаНаименование;
	
	ОО = РеквизитФормыВЗначение("Объект");
	оОсновнаяФорма = ОО.Метаданные().ОсновнаяФорма;
	
	Если оОсновнаяФорма = Неопределено Тогда
		сФормаНаименование = "";
	Иначе
		сФормаНаименование = оОсновнаяФорма.Имя;
	КонецЕсли;
	
	Возврат сФормаНаименование;
КонецФункции

// Функция - Имя формы обработки
//
// Параметры:
//  оФорма	 - УправляемаяФорма	 - объект управляемой формы, имя которого нужно получить
// 
// Возвращаемое значение:
//  Строка - имя формы
//
&НаКлиенте
Функция Форма_Имя(оФорма)
	
	Если ТипЗнч(оФорма) <> Тип("УправляемаяФорма") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Сред(оФорма.ИмяФормы, СтрНайти(оФорма.ИмяФормы, ".", НаправлениеПоиска.СКонца)+1);
КонецФункции

// Процедура - Записать в Журнал регистрации (Сервер)
//
// Параметры:
//  сСобытие		 - Строка - Наименование события
//  сСообщение		 - Строка - Текст сообщения
//  чТипСообщения	 - Число - Тип сообщения:
//		* 1 - Информация
//		* 2 - Предупреждение
//		* 3 - Ошибка
//		* 4 - Примечание
//
&НаСервереБезКонтекста
Процедура SaveToJournal(Val сСобытие = "", Val сСообщение = "", Val чТипСообщения = 1)
	VAR sEvent, oMsgType;
	
	Если ПустаяСтрока(сСобытие) Тогда
		сСобытие = "Модуль отправки статистики в GoogleAnalytics | ФормаГлавная";
	КонецЕсли;

	IF (TypeOf(сСообщение) = Type("String")) AND (NOT IsBlankString(сСообщение)) THEN
		sEvent = ?(IsBlankString(сСобытие), "Х.З.", сСобытие);
		
		IF чТипСообщения = 1 THEN
			oMsgType = УровеньЖурналаРегистрации.Информация;
		ELSIF чТипСообщения = 2 THEN
			oMsgType = УровеньЖурналаРегистрации.Предупреждение;
		ELSIF чТипСообщения = 3 THEN
			oMsgType = УровеньЖурналаРегистрации.Ошибка;
		ELSIF чТипСообщения = 4 THEN
			oMsgType = УровеньЖурналаРегистрации.Примечание;
		ELSE
			oMsgType = УровеньЖурналаРегистрации.Предупреждение;
		ENDIF;
		
		ЗаписьЖурналаРегистрации(sEvent, oMsgType,,, сСообщение);
	ENDIF;
	
КонецПроцедуры

#КонецОбласти

#Область Конструктор_деструктор

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	м_ОФ = ОсновнаяФорма_Получить(ЭтотОбъект);
	Если м_ОФ = Неопределено Тогда
		СообщитьПользователю("Модуль GA не подключен. Подробнее, см. ЖР.");
	КонецЕсли;
	
	// GA
	мДанные = м_ОФ.м_GA.GA_Форма(м_ОФ.м_GA.Обработка_Имя(), м_ОФ.м_GA.Форма_Имя(ЭтотОбъект));
	м_ОФ.м_GA.GA_ОтправитьСведения(мДанные);

	Элементы.Дек_ВерПримера.Заголовок = СтрШаблон(Элементы.Дек_ВерПримера.Заголовок, ПолучитьВерсиюПримера());
	Элементы.Дек_ВерGA.Заголовок = СтрШаблон(Элементы.Дек_ВерGA.Заголовок, м_ОФ.м_GA.ВерсияМодуляGA());
КонецПроцедуры

#КонецОбласти

#Область Прочие_методы

// Процедура - Сообщить пользователю
//
// Параметры:
//  сСообщение	 - Строка - текст сообщения
//
&НаКлиенте
Процедура СообщитьПользователю(сСообщение)
	Перем Сообщение;
	
	Если ТипЗнч(сСообщение) = Тип("Строка") И НЕ ПустаяСтрока(сСообщение) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = сСообщение;
		Сообщение.Сообщить(); 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьВерсиюПримера()
	Перем ОО;
	
	ОО = РеквизитФормыВЗначение("Объект");
	Возврат ОО.м_сВерсияОбработки;
КонецФункции

#КонецОбласти